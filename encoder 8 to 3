//design 

module encoder_d (

input wire [7:0] in;
outptut reg [2:0] out;

);

always@(*)
begin 

case(in)
 
8'h0000_0001:out = 3'b000;
8'h0000_0010:out = 3'b001;
8'h0000_0100:out = 3'b010;
8'h0000_1000:out = 3'b011;
8'h0001_0000:out = 3'b100;
8'h0010_0000:out = 3'b101;
8'h0100_0000:out = 3'b110;
8'h1000_0000:out = 3'b111;
default :out =3'b000;
endcase 
end 
endmodule 


//testbench 

module encoder_tb();

reg [7:0] in;
wire [2:0] out;

encoder_d dut ( .in(in),
                .out(out)
                );

 initial begin 

 in = 8'h 0000_0000;
 out = 3'b 000;

 #10 in = 0000_0001;
 #10in = 0000_0010;
 #10in = 0000_0100;
 #10in = 0000_1000;
 #10 in = 0001_0000;
 #10 in = 0010_0000;
 #10 in = 0100_0000;
 #10in = 1000_0000;

 #10 $finish ;
 
end 

initial begin 
#10$finish ("time=%t,in=%b,out=%b",$time,in,out);
end 

endmodule 







